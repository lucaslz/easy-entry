-- MySQL Script generated by MySQL Workbench
-- dom 08 jul 2018 16:08:44 -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema easyentry
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema easyentry
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `easyentry` DEFAULT CHARACTER SET utf8 ;
USE `easyentry` ;

-- -----------------------------------------------------
-- Table `easyentry`.`enderecos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`enderecos` (
  `id_endereco` INT NOT NULL AUTO_INCREMENT,
  `endereco` VARCHAR(200) NOT NULL,
  `cep` VARCHAR(8) NOT NULL,
  `bairro` VARCHAR(100) NOT NULL,
  `uf` VARCHAR(2) NOT NULL,
  `numero` INT NOT NULL,
  `cidade` VARCHAR(100) NOT NULL,
  `estado` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_endereco`),
  UNIQUE INDEX `id_endereco_un` (`id_endereco` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easyentry`.`pessoa_fisicas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`pessoa_fisicas` (
  `id_pessoa_fisica` INT NOT NULL AUTO_INCREMENT,
  `id_endereco` INT NOT NULL,
  `nome` VARCHAR(100) NOT NULL,
  `sobrenome` VARCHAR(100) NOT NULL,
  `cpf` VARCHAR(11) NOT NULL,
  `rg` VARCHAR(15) NOT NULL,
  `orgao_emissor` VARCHAR(100) NOT NULL,
  `idade` INT NOT NULL,
  PRIMARY KEY (`id_pessoa_fisica`, `id_endereco`),
  UNIQUE INDEX `id_pessoa_un` (`id_pessoa_fisica` ASC),
  INDEX `endereco_idx` (`id_endereco` ASC),
  CONSTRAINT `fk_endereco_pessoa_fisica`
    FOREIGN KEY (`id_endereco`)
    REFERENCES `easyentry`.`enderecos` (`id_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easyentry`.`pessoa_juridicas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`pessoa_juridicas` (
  `id_pessoa_juridica` INT NOT NULL AUTO_INCREMENT,
  `id_endereco` INT NOT NULL,
  `cnpj` VARCHAR(14) NOT NULL,
  `razao_social` VARCHAR(200) NOT NULL,
  `inscricao_estadual` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`id_pessoa_juridica`, `id_endereco`),
  UNIQUE INDEX `id_pessoa_juridica_un` (`id_pessoa_juridica` ASC),
  INDEX `endereco_idx` (`id_endereco` ASC),
  CONSTRAINT `fk_endereco_pessoa_juridica`
    FOREIGN KEY (`id_endereco`)
    REFERENCES `easyentry`.`enderecos` (`id_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easyentry`.`tipo_pessoas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`tipo_pessoas` (
  `id_tipo_pessoa` INT NOT NULL AUTO_INCREMENT,
  `tipo_nome` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_tipo_pessoa`),
  UNIQUE INDEX `id_tipo_pessoa_un` (`id_tipo_pessoa` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easyentry`.`tipo_usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`tipo_usuarios` (
  `id_tipo_usuario` INT NOT NULL AUTO_INCREMENT,
  `nome_tipo_usuario` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_tipo_usuario`),
  UNIQUE INDEX `tipo_usuario_un` (`id_tipo_usuario` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easyentry`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`usuarios` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `id_tipo_usuario` INT NOT NULL,
  `id_tipo_pessoa` INT NOT NULL,
  `id_pessoa` INT NOT NULL,
  `email` VARCHAR(200) NOT NULL,
  `senha` VARCHAR(100) NOT NULL,
  `administrador` TINYINT NOT NULL,
  PRIMARY KEY (`id_usuario`, `id_tipo_usuario`, `id_tipo_pessoa`),
  UNIQUE INDEX `id_usuario_un` (`id_usuario` ASC),
  INDEX `tipo_pessoa_idx` (`id_tipo_pessoa` ASC),
  INDEX `tipo_usuario_idx` (`id_tipo_usuario` ASC),
  CONSTRAINT `fkTipoPessoaUsuario`
    FOREIGN KEY (`id_tipo_pessoa`)
    REFERENCES `easyentry`.`tipo_pessoas` (`id_tipo_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fkTipoUsuarioUsuario`
    FOREIGN KEY (`id_tipo_usuario`)
    REFERENCES `easyentry`.`tipo_usuarios` (`id_tipo_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easyentry`.`modalidade_eventos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`modalidade_eventos` (
  `id_modalidade_evento` INT NOT NULL AUTO_INCREMENT,
  `nome_modalidade` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_modalidade_evento`),
  UNIQUE INDEX `id_modalidade_evento_un` (`id_modalidade_evento` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easyentry`.`eventos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`eventos` (
  `id_evento` INT NOT NULL AUTO_INCREMENT,
  `id_modalidade_evento` INT NOT NULL,
  `id_pessoa_juridica` INT NOT NULL,
  `nome` VARCHAR(100) NOT NULL,
  `descricao_evento` LONGTEXT NOT NULL,
  `data_evento` DATETIME NOT NULL,
  `foto_evento` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_evento`, `id_modalidade_evento`, `id_pessoa_juridica`),
  UNIQUE INDEX `id_evento_un` (`id_evento` ASC),
  INDEX `modalidade_evento_idx` (`id_modalidade_evento` ASC),
  INDEX `pessoa_juridica_idx` (`id_pessoa_juridica` ASC),
  CONSTRAINT `fk_modalidade_evento_evento`
    FOREIGN KEY (`id_modalidade_evento`)
    REFERENCES `easyentry`.`modalidade_eventos` (`id_modalidade_evento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pessoa_juridica_evento`
    FOREIGN KEY (`id_pessoa_juridica`)
    REFERENCES `easyentry`.`pessoa_juridicas` (`id_pessoa_juridica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easyentry`.`desconto_especials`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`desconto_especials` (
  `id_desconto_especial` INT NOT NULL AUTO_INCREMENT,
  `nome_desconto_especial` VARCHAR(200) NOT NULL,
  `porcentagem_desconto` INT NOT NULL,
  PRIMARY KEY (`id_desconto_especial`),
  UNIQUE INDEX `desconto_especial_un` (`id_desconto_especial` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easyentry`.`lote_eventos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`lote_eventos` (
  `id_lote_evento` INT NOT NULL AUTO_INCREMENT,
  `id_desconto_especial` INT NOT NULL,
  `id_evento` INT NOT NULL,
  `preco` FLOAT NOT NULL,
  `nome_lote` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`id_lote_evento`, `id_desconto_especial`, `id_evento`),
  UNIQUE INDEX `id_lote_evento_un` (`id_lote_evento` ASC),
  INDEX `desconto_especial_idx` (`id_desconto_especial` ASC),
  INDEX `evento_idx` (`id_evento` ASC),
  CONSTRAINT `fk_desconto_especial_lote_evento`
    FOREIGN KEY (`id_desconto_especial`)
    REFERENCES `easyentry`.`desconto_especials` (`id_desconto_especial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_evento_lote_evento`
    FOREIGN KEY (`id_evento`)
    REFERENCES `easyentry`.`eventos` (`id_evento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easyentry`.`localidade_eventos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`localidade_eventos` (
  `id_localidade_evento` INT NOT NULL AUTO_INCREMENT,
  `id_endereco` INT NOT NULL,
  `id_evento` INT NOT NULL,
  PRIMARY KEY (`id_localidade_evento`, `id_endereco`, `id_evento`),
  UNIQUE INDEX `localidade_evento_un` (`id_localidade_evento` ASC),
  INDEX `endereco_idx` (`id_endereco` ASC),
  INDEX `evento_idx` (`id_evento` ASC),
  CONSTRAINT `fk_endereco_localidade_evento`
    FOREIGN KEY (`id_endereco`)
    REFERENCES `easyentry`.`enderecos` (`id_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_evento_localidade_evento`
    FOREIGN KEY (`id_evento`)
    REFERENCES `easyentry`.`eventos` (`id_evento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easyentry`.`historico_vendas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`historico_vendas` (
  `id_historico_venda` INT NOT NULL AUTO_INCREMENT,
  `id_evento` INT NOT NULL,
  `id_pessoa_juridica` INT NOT NULL,
  `data_venda` DATETIME NOT NULL,
  PRIMARY KEY (`id_historico_venda`, `id_evento`, `id_pessoa_juridica`),
  UNIQUE INDEX `historico_venda_un` (`id_historico_venda` ASC),
  INDEX `evento_idx` (`id_evento` ASC),
  INDEX `pessoa_juridica_idx` (`id_pessoa_juridica` ASC),
  CONSTRAINT `fk_evento_historico_venda`
    FOREIGN KEY (`id_evento`)
    REFERENCES `easyentry`.`eventos` (`id_evento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pessoa_juridica_historico_venda`
    FOREIGN KEY (`id_pessoa_juridica`)
    REFERENCES `easyentry`.`pessoa_juridicas` (`id_pessoa_juridica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easyentry`.`historico_compras`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`historico_compras` (
  `id_historico_compra` INT NOT NULL AUTO_INCREMENT,
  `id_pessoa_fisica` INT NOT NULL,
  `id_evento` INT NOT NULL,
  `data_compra` DATETIME NOT NULL,
  PRIMARY KEY (`id_historico_compra`, `id_pessoa_fisica`, `id_evento`),
  UNIQUE INDEX `historico_compra_un` (`id_historico_compra` ASC),
  INDEX `pessoa_fisica_idx` (`id_pessoa_fisica` ASC),
  INDEX `evento_idx` (`id_evento` ASC),
  CONSTRAINT `fk_pessoa_fisica_historico_compra`
    FOREIGN KEY (`id_pessoa_fisica`)
    REFERENCES `easyentry`.`pessoa_fisicas` (`id_pessoa_fisica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_evento_historico_compra`
    FOREIGN KEY (`id_evento`)
    REFERENCES `easyentry`.`eventos` (`id_evento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easyentry`.`devolucaos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`devolucaos` (
  `id_devolucao` INT NOT NULL AUTO_INCREMENT,
  `id_evento` INT NOT NULL,
  `id_pessoa_fisica` INT NOT NULL,
  PRIMARY KEY (`id_devolucao`, `id_evento`, `id_pessoa_fisica`),
  UNIQUE INDEX `id_devolucao_un` (`id_devolucao` ASC),
  INDEX `evento_idx` (`id_evento` ASC),
  INDEX `pessoa_fisica_idx` (`id_pessoa_fisica` ASC),
  CONSTRAINT `fk_evento_devolucao`
    FOREIGN KEY (`id_evento`)
    REFERENCES `easyentry`.`eventos` (`id_evento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pessoa_fisica_devolucao`
    FOREIGN KEY (`id_pessoa_fisica`)
    REFERENCES `easyentry`.`pessoa_fisicas` (`id_pessoa_fisica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `easyentry` ;

-- -----------------------------------------------------
-- Placeholder table for view `easyentry`.`VwEventos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`VwEventos` (`id_evento` INT, `nome` INT, `data_evento` INT, `foto_evento` INT);

-- -----------------------------------------------------
-- Placeholder table for view `easyentry`.`VwEventoDetalhados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`VwEventoDetalhados` (`id_evento` INT, `nome` INT, `data_evento` INT, `descricao_evento` INT, `foto_evento` INT, `nome_modalidade` INT, `preco` INT, `nome_lote` INT);

-- -----------------------------------------------------
-- Placeholder table for view `easyentry`.`VwLocalidadeEventos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`VwLocalidadeEventos` (`id_evento` INT, `endereco` INT, `cep` INT, `bairro` INT, `uf` INT, `numero` INT, `cidade` INT, `estado` INT);

-- -----------------------------------------------------
-- Placeholder table for view `easyentry`.`VwDescontoEnventos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`VwDescontoEnventos` (`nome_desconto_especial` INT, `porcentagem_desconto` INT);

-- -----------------------------------------------------
-- Placeholder table for view `easyentry`.`VwHistoricoCompras`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`VwHistoricoCompras` (`id_historico_compra` INT, `id_pessoa_fisica` INT, `id_evento` INT, `data_compra` INT, `nome_comprador` INT, `nome_evento` INT, `descricao_evento` INT);

-- -----------------------------------------------------
-- Placeholder table for view `easyentry`.`VwHistoricoVendas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`VwHistoricoVendas` (`id_historico_venda` INT, `id_evento` INT, `id_pessoa_juridica` INT, `data_venda` INT, `razao_social` INT, `cnpj` INT, `nome` INT, `descricao_evento` INT, `data_evento` INT);

-- -----------------------------------------------------
-- Placeholder table for view `easyentry`.`VwEmpresas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`VwEmpresas` (`id_pessoa_juridica` INT, `id_endereco` INT, `cnpj` INT, `razao_social` INT, `inscricao_estadual` INT, `endereco` INT, `cep` INT, `bairro` INT, `uf` INT, `numero` INT, `cidade` INT, `estado` INT);

-- -----------------------------------------------------
-- Placeholder table for view `easyentry`.`VwPessoaJuridicaEventos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`VwPessoaJuridicaEventos` (`id_pessoa_juridica` INT, `id_evento` INT, `razao_social` INT, `inscricao_estadual` INT, `cnpj` INT, `nome_evento` INT, `descricao_evento` INT, `data_evento` INT);

-- -----------------------------------------------------
-- Placeholder table for view `easyentry`.`VwUsuarioJuridicos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`VwUsuarioJuridicos` (`id_usuario` INT, `id_tipo_usuario` INT, `id_tipo_pessoa` INT, `id_pessoa` INT, `email` INT, `senha` INT, `tipo_pessoa` INT, `tipo_usuario` INT);

-- -----------------------------------------------------
-- Placeholder table for view `easyentry`.`VwDevolucaos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easyentry`.`VwDevolucaos` (`id_devolucao` INT, `id_evento` INT, `id_pessoa_fisica` INT, `nome_pessoa_fisica` INT, `sobrenome` INT, `cpf` INT, `nome_evento` INT, `data_evento` INT);

-- -----------------------------------------------------
-- View `easyentry`.`VwEventos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `easyentry`.`VwEventos`;
USE `easyentry`;
CREATE  OR REPLACE VIEW `VwEventos` AS SELECT e.id_evento, e.nome, e.data_evento, e.foto_evento FROM eventos AS e;

-- -----------------------------------------------------
-- View `easyentry`.`VwEventoDetalhados`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `easyentry`.`VwEventoDetalhados`;
USE `easyentry`;
CREATE  OR REPLACE VIEW `VwEventoDetalhados` AS SELECT 
e.id_evento,
e.nome,
e.data_evento,
e.descricao_evento,
e.foto_evento,
me.nome_modalidade,
le.preco,
le.nome_lote
FROM eventos AS e
INNER JOIN modalidade_eventos AS me ON e.id_modalidade_evento = me.id_modalidade_evento
INNER JOIN lote_eventos AS le ON e.id_evento = le.id_evento;

-- -----------------------------------------------------
-- View `easyentry`.`VwLocalidadeEventos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `easyentry`.`VwLocalidadeEventos`;
USE `easyentry`;
CREATE  OR REPLACE VIEW `VwLocalidadeEventos` AS SELECT 
le.id_evento, 
en.endereco, 
en.cep, 
en.bairro, 
en.uf, 
en.numero,
en.cidade, 
en.estado
FROM localidade_eventos AS le
INNER JOIN eventos AS e ON le.id_evento = e.id_evento
INNER JOIN enderecos AS en ON le.id_endereco = en.id_endereco;

-- -----------------------------------------------------
-- View `easyentry`.`VwDescontoEnventos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `easyentry`.`VwDescontoEnventos`;
USE `easyentry`;
CREATE  OR REPLACE VIEW `VwDescontoEnventos` AS SELECT 
de.nome_desconto_especial,
de.porcentagem_desconto
FROM desconto_especials AS de
INNER JOIN lote_eventos AS le ON de.id_desconto_especial = le.id_desconto_especial
INNER JOIN eventos AS e ON le.id_evento = e.id_evento;

-- -----------------------------------------------------
-- View `easyentry`.`VwHistoricoCompras`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `easyentry`.`VwHistoricoCompras`;
USE `easyentry`;
CREATE  OR REPLACE VIEW `VwHistoricoCompras` AS SELECT 
hc.id_historico_compra, 
hc.id_pessoa_fisica, 
hc.id_evento, 
hc.data_compra,
pf.nome AS nome_comprador,
e.nome AS nome_evento,
e.descricao_evento
FROM historico_compras AS hc
INNER JOIN eventos AS e ON hc.id_evento = e.id_evento
INNER JOIN pessoa_fisicas AS pf ON hc.id_pessoa_fisica = pf.id_pessoa_fisica;

-- -----------------------------------------------------
-- View `easyentry`.`VwHistoricoVendas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `easyentry`.`VwHistoricoVendas`;
USE `easyentry`;
CREATE  OR REPLACE VIEW `VwHistoricoVendas` AS SELECT 
hv.id_historico_venda,
hv.id_evento,
hv.id_pessoa_juridica,
hv.data_venda,
pj.razao_social,
pj.cnpj,
e.nome,
e.descricao_evento,
e.data_evento
FROM historico_vendas AS hv
INNER JOIN pessoa_juridicas AS pj ON hv.id_pessoa_juridica = pj.id_pessoa_juridica
INNER JOIN eventos AS e ON hv.id_evento = e.id_evento;

-- -----------------------------------------------------
-- View `easyentry`.`VwEmpresas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `easyentry`.`VwEmpresas`;
USE `easyentry`;
CREATE  OR REPLACE VIEW `VwEmpresas` AS SELECT
pj.id_pessoa_juridica,
pj.id_endereco,
pj.cnpj,
pj.razao_social,
pj.inscricao_estadual,
e.endereco,
e.cep,
e.bairro,
e.uf,
e.numero,
e.cidade,
e.estado
FROM pessoa_juridicas AS pj
INNER JOIN enderecos AS e ON pj.id_endereco = e.id_endereco;

-- -----------------------------------------------------
-- View `easyentry`.`VwPessoaJuridicaEventos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `easyentry`.`VwPessoaJuridicaEventos`;
USE `easyentry`;
CREATE  OR REPLACE VIEW `VwPessoaJuridicaEventos` AS SELECT
pj.id_pessoa_juridica,
e.id_evento,
pj.razao_social,
pj.inscricao_estadual,
pj.cnpj,
e.nome AS nome_evento,
e.descricao_evento,
e.data_evento
FROM pessoa_juridicas AS pj
INNER JOIN eventos AS e ON pj.id_pessoa_juridica = e.id_pessoa_juridica;

-- -----------------------------------------------------
-- View `easyentry`.`VwUsuarioJuridicos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `easyentry`.`VwUsuarioJuridicos`;
USE `easyentry`;
CREATE  OR REPLACE VIEW `VwUsuarioJuridicos` AS SELECT
u.id_usuario,
u.id_tipo_usuario,
u.id_tipo_pessoa,
u.id_pessoa,
u.email,
u.senha,
tp.tipo_nome AS tipo_pessoa,
tu.nome_tipo_usuario AS tipo_usuario
FROM usuarios AS u
INNER JOIN tipo_pessoas AS tp ON u.id_tipo_pessoa = tp.id_tipo_pessoa
INNER JOIN tipo_usuarios AS tu ON u.id_tipo_usuario = tu.id_tipo_usuario
INNER JOIN pessoa_juridicas AS pj ON u.id_pessoa = pj.id_pessoa_juridica;

-- -----------------------------------------------------
-- View `easyentry`.`VwDevolucaos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `easyentry`.`VwDevolucaos`;
USE `easyentry`;
CREATE  OR REPLACE VIEW `VwDevolucaos` AS SELECT
d.id_devolucao,
d.id_evento,
d.id_pessoa_fisica,
pf.nome AS nome_pessoa_fisica,
pf.sobrenome,
pf.cpf,
e.nome AS nome_evento,
e.data_evento
FROM devolucaos AS d
INNER JOIN pessoa_fisicas AS pf ON d.id_pessoa_fisica = pf.id_pessoa_fisica
INNER JOIN eventos AS e ON d.id_evento = e.id_evento;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
